name: Win-CloudPC-ZeroError

on:
  workflow_dispatch:
    inputs:
      idle_minutes:
        description: '挂机多少分钟后自动关机(最大360)'
        required: false
        default: '120'

jobs:
  cloud:
    runs-on: windows-latest
    timeout-minutes: 360
    steps:
      - name: 一键初始化 RDP（容错版）
        shell: powershell
        run: |
          # 1. 强制开启 RDP 服务
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -name "fDenyTSConnections" -value 0 -ErrorAction SilentlyContinue
          Enable-NetFirewallRule -DisplayGroup "Remote Desktop" -ErrorAction SilentlyContinue
          # 2. 防火墙万一没有规则就自建
          New-NetFirewallRule -Name "RDP-TCP-In-3389" -DisplayName "Remote Desktop - User Mode (TCP-In)" -Direction Inbound -Protocol TCP -LocalPort 3389 -Action Allow -ErrorAction SilentlyContinue
          # 3. 创建用户 github / 随机 12 位密码
          $pwd = -join ((48..57)+(65..90)+(97..122) | Get-Random -Count 12 | % {[char]$_})
          net user github $pwd /add /y
          net localgroup administrators github /add
          # 4. 输出连接信息
          $ip = (Invoke-RestMethod ifconfig.me)
          echo "✅ Windows 云电脑已就绪" >> $env:GITHUB_STEP_SUMMARY
          echo "- 公网 IP：$ip" >> $env:GITHUB_STEP_SUMMARY
          echo "- 端口：3389" >> $env:GITHUB_STEP_SUMMARY
          echo "- 用户名：github" >> $env:GITHUB_STEP_SUMMARY
          echo "- 密码：$pwd" >> $env:GITHUB_STEP_SUMMARY
          Write-Output "RDP: $ip`:3389  用户: github  密码: $pwd"

      - name: 安装常用软件（绝对零出错）
        shell: powershell
        run: |
          Set-ExecutionPolicy Bypass -Scope Process -Force -ErrorAction SilentlyContinue
          [System.Net.ServicePointManager]::SecurityProtocol = 3072
          iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1')) -ErrorAction SilentlyContinue
          choco install 7zip vscode googlechrome -y --no-progress --force --ignore-checksums || Write-Output "部分软件安装失败，已跳过"

      - name: 挂机保持存活
        shell: powershell
        run: |
          $idle = [int]"${{ github.event.inputs.idle_minutes }}"
          Write-Output "========== 开始挂机，$idle 分钟后自动关机 =========="
          timeout /t ($idle * 60) /nobreak >$null 2>&1
          Stop-Computer -Force -ErrorAction SilentlyContinue
