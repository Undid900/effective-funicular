name: Windows Cloud PC (RDP + ngrok)

on:
  workflow_dispatch:          # 手动触发
  # push:                     # 如需要 push 触发，可取消注释
  #   branches: [ main ]

env:
  USERNAME: actions           # 登录账号
  PASSWORD: Actions@2025      # 登录密码（建议改成自己的）
  NGROK_REGION: us            # ngrok 区域，可选 us / eu / ap 等

jobs:
  cloud:
    runs-on: windows-latest
    timeout-minutes: 120      # 最大 2 h（GitHub 限制）
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Enable RDP & create user
        run: |
          # 创建本地账户
          net user ${{ env.USERNAME }} ${{ env.PASSWORD }} /add /y
          net localgroup "Administrators" ${{ env.USERNAME }} /add
          net localgroup "Remote Desktop Users" ${{ env.USERNAME }} /add

          # 启用远程桌面
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -name "fDenyTSConnections" -value 0
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -name "UserAuthentication" -value 0
          Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
          netsh advfirewall set allprofiles state off   # 完全关闭防火墙，省得端口被拦

          # 高性能电源方案，防止息屏
          powercfg -setactive 8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c
          powercfg -change -monitor-timeout-ac 0
          powercfg -change -standby-timeout-ac 0

      - name: Install ngrok
        run: |
          Invoke-WebRequest -Uri https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-windows-amd64.zip -OutFile ngrok.zip
          Expand-Archive ngrok.zip -DestinationPath .
          ./ngrok config add-authtoken ${{ secrets.NGROK_AUTH_TOKEN }}

      - name: Start ngrok tunnel (3389)
        run: |
          # 后台挂起 ngrok，把 3389 映射出去
          Start-Process -NoNewWindow -FilePath "./ngrok" -ArgumentList "tcp 3389 --region=${{ env.NGROK_REGION }} --log=stdout"

      - name: Wait 10 s 并打印连接信息
        run: |
          Start-Sleep -Seconds 10
          $tunnel = (Invoke-WebRequest -Uri http://localhost:4040/api/tunnels).Content | ConvertFrom-Json
          $hostPort = $tunnel.tunnels[0].public_url -replace "tcp://"
          Write-Host "============================"
          Write-Host "远程桌面地址：$hostPort"
          Write-Host "用户名：${{ env.USERNAME }}"
          Write-Host "密码  ：${{ env.PASSWORD }}"
          Write-Host "============================"

      - name: Keep alive (最多 120 min)
        timeout-minutes: 115
        run: |
          # 每 30 s 打印一次心跳，防止 Actions 被判定掉线
          for ($i=1; $i -le 230; $i++) {
            Write-Host "[$(Get-Date -Format HH:mm:ss)] 远程桌面仍在运行，剩余 $((120-$i*0.5)) min …"
            Start-Sleep -Seconds 30
          }

      - name: Logoff & cleanup
        if: always()
        run: |
          # 强制注销所有远程会话，关闭 ngrok
          qwinsta | ForEach-Object { $id = ($_ -split "\s+")[2]; if ($id -match "\d") { rwinsta $id } }
          taskkill /f /im ngrok.exe 2>$null || true

